{"version":3,"file":"Optimizely.min.js","sources":["../../../src/utils/logUtil.js","../../../src/integrations/Optimizely/constants.js","../../../src/integrations/Optimizely/browser.js"],"sourcesContent":["const LOG_LEVEL_INFO = 1;\nconst LOG_LEVEL_DEBUG = 2;\nconst LOG_LEVEL_WARN = 3;\nconst LOG_LEVEL_ERROR = 4;\nconst DEF_LOG_LEVEL = LOG_LEVEL_ERROR;\nlet LOG_LEVEL = DEF_LOG_LEVEL;\n\nconst logger = {\n  setLogLevel(logLevel) {\n    switch (logLevel.toUpperCase()) {\n      case 'INFO':\n        LOG_LEVEL = LOG_LEVEL_INFO;\n        break;\n      case 'DEBUG':\n        LOG_LEVEL = LOG_LEVEL_DEBUG;\n        break;\n      case 'WARN':\n        LOG_LEVEL = LOG_LEVEL_WARN;\n        break;\n      default:\n        LOG_LEVEL = DEF_LOG_LEVEL;\n        break;\n    }\n  },\n\n  info(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_INFO) {\n      console.info(...args);\n    }\n  },\n\n  debug(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_DEBUG) {\n      console.log(...args);\n    }\n  },\n\n  warn(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_WARN) {\n      console.warn(...args);\n    }\n  },\n\n  error(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_ERROR) {\n      console.error(...args);\n    }\n  },\n};\n\nexport default logger;\n","const NAME = 'OPTIMIZELY';\nconst CNameMapping = {\n  [NAME]: NAME,\n  Optimizely: NAME,\n  optimizely: NAME,\n};\n\nexport { NAME, CNameMapping };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable class-methods-use-this */\nimport logger from '../../utils/logUtil';\nimport { NAME } from './constants';\n\nclass Optimizely {\n  constructor(config, analytics, destinationInfo) {\n    if (analytics.logLevel) {\n      logger.setLogLevel(analytics.logLevel);\n    }\n    this.analytics = analytics;\n    this.sendExperimentTrack = config.sendExperimentTrack;\n    this.sendExperimentIdentify = config.sendExperimentIdentify;\n    this.sendExperimentTrackAsNonInteractive = config.sendExperimentTrackAsNonInteractive;\n    this.revenueOnlyOnOrderCompleted = config.revenueOnlyOnOrderCompleted;\n    this.trackCategorizedPages = config.trackCategorizedPages;\n    this.trackNamedPages = config.trackNamedPages;\n    this.customCampaignProperties = config.customCampaignProperties\n      ? config.customCampaignProperties\n      : [];\n    this.customExperimentProperties = config.customExperimentProperties\n      ? config.customExperimentProperties\n      : [];\n    this.name = NAME;\n    this.areTransformationsConnected = destinationInfo && destinationInfo.areTransformationsConnected;\n    this.destinationId = destinationInfo && destinationInfo.destinationId;\n  }\n\n  init() {\n    logger.debug('=== in optimizely init ===');\n    this.initOptimizelyIntegration(this.referrerOverride, this.sendDataToRudder);\n  }\n\n  referrerOverride = (referrer) => {\n    if (referrer) {\n      window.optimizelyEffectiveReferrer = referrer;\n      return referrer;\n    }\n    return undefined;\n  };\n\n  sendDataToRudder = (campaignState) => {\n    logger.debug(campaignState);\n    const { experiment } = campaignState;\n    const { variation } = campaignState;\n    const context = { integrations: { All: true } };\n    const { audiences } = campaignState;\n\n    // Reformatting this data structure into hash map so concatenating variation ids and names is easier later\n    const audiencesMap = {};\n    audiences.forEach((audience) => {\n      audiencesMap[audience.id] = audience.name;\n    });\n\n    const audienceIds = Object.keys(audiencesMap).sort().join();\n    const audienceNames = Object.values(audiencesMap).sort().join(', ');\n\n    if (this.sendExperimentTrack) {\n      const props = {\n        campaignName: campaignState.campaignName,\n        campaignId: campaignState.id,\n        experimentId: experiment.id,\n        experimentName: experiment.name,\n        variationName: variation.name,\n        variationId: variation.id,\n        audienceId: audienceIds, // eg. '7527562222,7527111138'\n        audienceName: audienceNames, // eg. 'Peaky Blinders, Trust Tree'\n        isInCampaignHoldback: campaignState.isInCampaignHoldback,\n      };\n\n      // If this was a redirect experiment and the effective referrer is different from document.referrer,\n      // this value is made available. So if a customer came in via google.com/ad -> tb12.com -> redirect experiment -> Belichickgoat.com\n      // `experiment.referrer` would be google.com/ad here NOT `tb12.com`.\n      if (experiment.referrer) {\n        props.referrer = experiment.referrer;\n        context.page = { referrer: experiment.referrer };\n      }\n\n      // For Google's nonInteraction flag\n      if (this.sendExperimentTrackAsNonInteractive) props.nonInteraction = 1;\n\n      // If customCampaignProperties is provided overide the props with it.\n      // If valid customCampaignProperties present it will override existing props.\n      // const data = window.optimizely && window.optimizely.get(\"data\");\n      const data = campaignState;\n      if (data && this.customCampaignProperties.length > 0) {\n        for (let index = 0; index < this.customCampaignProperties.length; index += 1) {\n          const rudderProp = this.customCampaignProperties[index].from;\n          const optimizelyProp = this.customCampaignProperties[index].to;\n          if (typeof props[optimizelyProp] !== 'undefined') {\n            props[rudderProp] = props[optimizelyProp];\n            delete props[optimizelyProp];\n          }\n        }\n      }\n\n      // Send to Rudder\n      this.analytics.track('Experiment Viewed', props, context);\n    }\n    if (this.sendExperimentIdentify) {\n      const traits = {};\n      traits[`Experiment: ${experiment.name}`] = variation.name;\n\n      // Send to Rudder\n      this.analytics.identify(traits);\n    }\n  };\n\n  initOptimizelyIntegration(referrerOverride, sendCampaignData) {\n    const newActiveCampaign = (id, referrer) => {\n      const state = window.optimizely.get && window.optimizely.get('state');\n      if (state) {\n        const activeCampaigns = state.getCampaignStates({\n          isActive: true,\n        });\n        const campaignState = activeCampaigns[id];\n        if (referrer) campaignState.experiment.referrer = referrer;\n        sendCampaignData(campaignState);\n      }\n    };\n\n    const checkReferrer = () => {\n      const state = window.optimizely.get && window.optimizely.get('state');\n      if (state) {\n        const referrer = state.getRedirectInfo() && state.getRedirectInfo().referrer;\n\n        if (referrer) {\n          referrerOverride(referrer);\n          return referrer;\n        }\n      }\n      return undefined;\n    };\n\n    const registerFutureActiveCampaigns = () => {\n      window.optimizely = window.optimizely || [];\n      window.optimizely.push({\n        type: 'addListener',\n        filter: {\n          type: 'lifecycle',\n          name: 'campaignDecided',\n        },\n        handler(event) {\n          const { id } = event.data.campaign;\n          newActiveCampaign(id);\n        },\n      });\n    };\n\n    const registerCurrentlyActiveCampaigns = () => {\n      window.optimizely = window.optimizely || [];\n      const state = window.optimizely.get && window.optimizely.get('state');\n      if (state) {\n        const referrer = checkReferrer();\n        const activeCampaigns = state.getCampaignStates({\n          isActive: true,\n        });\n        Object.keys(activeCampaigns).forEach((id) => {\n          if (referrer) {\n            newActiveCampaign(id, referrer);\n          } else {\n            newActiveCampaign(id);\n          }\n        });\n      } else {\n        window.optimizely.push({\n          type: 'addListener',\n          filter: {\n            type: 'lifecycle',\n            name: 'initialized',\n          },\n          handler() {\n            checkReferrer();\n          },\n        });\n      }\n    };\n    registerCurrentlyActiveCampaigns();\n    registerFutureActiveCampaigns();\n  }\n\n  track(rudderElement) {\n    logger.debug('in Optimizely web track');\n    const eventProperties = rudderElement.message.properties;\n    const { event } = rudderElement.message;\n    if (eventProperties.revenue && this.revenueOnlyOnOrderCompleted) {\n      if (event === 'Order Completed') {\n        eventProperties.revenue = Math.round(eventProperties.revenue * 100);\n      } else if (event !== 'Order Completed') {\n        delete eventProperties.revenue;\n      }\n    }\n    const eventName = event.replace(/:/g, '_'); // can't have colons so replacing with underscores\n    const payload = {\n      type: 'event',\n      eventName,\n      tags: eventProperties,\n    };\n\n    window.optimizely.push(payload);\n  }\n\n  page(rudderElement) {\n    logger.debug('in Optimizely web page');\n    const { category } = rudderElement.message.properties;\n    const { name } = rudderElement.message;\n    /* const contextOptimizely = {\n      integrations: { All: false, Optimizely: true },\n    }; */\n\n    // categorized pages\n    if (category && this.trackCategorizedPages) {\n      // this.analytics.track(`Viewed ${category} page`, {}, contextOptimizely);\n      rudderElement.message.event = `Viewed ${category} page`;\n      rudderElement.message.type = 'track';\n      this.track(rudderElement);\n    }\n\n    // named pages\n    if (name && this.trackNamedPages) {\n      // this.analytics.track(`Viewed ${name} page`, {}, contextOptimizely);\n      rudderElement.message.event = `Viewed ${name} page`;\n      rudderElement.message.type = 'track';\n      this.track(rudderElement);\n    }\n  }\n\n  isLoaded() {\n    return !!(window.optimizely && window.optimizely.push !== Array.prototype.push);\n  }\n\n  isReady() {\n    return !!(window.optimizely && window.optimizely.push !== Array.prototype.push);\n  }\n}\n\nexport default Optimizely;\n"],"names":["_CNameMapping","LOG_LEVEL","logger","logLevel","toUpperCase","_console2","console","log","apply","arguments","NAME","_defineProperty","Optimizely","config","analytics","destinationInfo","_this","_classCallCheck","this","referrerOverride","referrer","window","optimizelyEffectiveReferrer","sendDataToRudder","campaignState","experiment","variation","context","integrations","All","audiences","audiencesMap","forEach","audience","id","name","audienceIds","Object","keys","sort","join","audienceNames","values","sendExperimentTrack","props","campaignName","campaignId","experimentId","experimentName","variationName","variationId","audienceId","audienceName","isInCampaignHoldback","page","sendExperimentTrackAsNonInteractive","nonInteraction","customCampaignProperties","length","index","rudderProp","from","optimizelyProp","to","track","sendExperimentIdentify","traits","concat","identify","revenueOnlyOnOrderCompleted","trackCategorizedPages","trackNamedPages","customExperimentProperties","areTransformationsConnected","destinationId","key","value","initOptimizelyIntegration","sendCampaignData","newActiveCampaign","state","optimizely","get","getCampaignStates","isActive","checkReferrer","getRedirectInfo","activeCampaigns","push","type","filter","handler","registerCurrentlyActiveCampaigns","event","data","campaign","rudderElement","eventProperties","message","properties","revenue","Math","round","payload","eventName","replace","tags","category","Array","prototype"],"mappings":"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"}