{"version":3,"file":"GoogleOptimize.min.js","sources":["../../../src/utils/logUtil.js","../../../src/utils/errorHandler.js","../../../src/utils/constants.js","../../../src/utils/ScriptLoader.js","../../../src/integrations/GoogleOptimize/constants.js","../../../src/integrations/GoogleOptimize/browser.js"],"sourcesContent":["const LOG_LEVEL_INFO = 1;\nconst LOG_LEVEL_DEBUG = 2;\nconst LOG_LEVEL_WARN = 3;\nconst LOG_LEVEL_ERROR = 4;\nconst DEF_LOG_LEVEL = LOG_LEVEL_ERROR;\nlet LOG_LEVEL = DEF_LOG_LEVEL;\n\nconst logger = {\n  setLogLevel(logLevel) {\n    switch (logLevel.toUpperCase()) {\n      case 'INFO':\n        LOG_LEVEL = LOG_LEVEL_INFO;\n        break;\n      case 'DEBUG':\n        LOG_LEVEL = LOG_LEVEL_DEBUG;\n        break;\n      case 'WARN':\n        LOG_LEVEL = LOG_LEVEL_WARN;\n        break;\n      default:\n        LOG_LEVEL = DEF_LOG_LEVEL;\n        break;\n    }\n  },\n\n  info(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_INFO) {\n      console.info(...args);\n    }\n  },\n\n  debug(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_DEBUG) {\n      console.log(...args);\n    }\n  },\n\n  warn(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_WARN) {\n      console.warn(...args);\n    }\n  },\n\n  error(...args) {\n    if (LOG_LEVEL <= LOG_LEVEL_ERROR) {\n      console.error(...args);\n    }\n  },\n};\n\nexport default logger;\n","import logger from './logUtil';\nimport { LOAD_ORIGIN, ERROR_REPORTING_SERVICE_GLOBAL_KEY_NAME } from './constants';\n\n/**\n * This function is to send handled errors to available error reporting client\n *\n * @param {Error} error Error instance from handled error\n */\nfunction notifyError(error) {\n  const errorReportingClient =\n    window.rudderanalytics && window.rudderanalytics[ERROR_REPORTING_SERVICE_GLOBAL_KEY_NAME];\n\n  if (errorReportingClient) {\n    errorReportingClient.notify(error);\n  }\n}\n\nfunction normaliseError(error, customMessage, analyticsInstance) {\n  let errorMessage;\n  try {\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else if (error instanceof Error) {\n      errorMessage = error.message;\n    } else {\n      errorMessage = error.message ? error.message : JSON.stringify(error);\n    }\n  } catch (e) {\n    errorMessage = '';\n  }\n\n  if (error instanceof Event) {\n    // Discard all the non-script loading errors\n    if (error.target && error.target.localName !== 'script') {\n      return '';\n    }\n\n    // Discard script errors that are not originated at SDK or from native SDKs\n    if (\n      error.target.dataset &&\n      (error.target.dataset.loader !== LOAD_ORIGIN ||\n        error.target.dataset.isNonNativeSDK !== 'true')\n    )\n      return '';\n\n    errorMessage = `error in script loading:: src::  ${error.target.src} id:: ${error.target.id}`;\n\n    // SDK triggered ad-blocker script\n    if (error.target.id === 'ad-block') {\n      analyticsInstance.page(\n        'RudderJS-Initiated',\n        'ad-block page request',\n        { path: '/ad-blocked', title: errorMessage },\n        analyticsInstance.sendAdblockPageOptions,\n      );\n      // No need to proceed further for Ad-block errors\n      return '';\n    }\n  }\n\n  const customErrMessagePrefix = customMessage || '';\n  return `[handleError]::${customErrMessagePrefix} \"${errorMessage}\"`;\n}\n\nfunction handleError(error, customMessage, analyticsInstance) {\n  let errorMessage;\n\n  try {\n    errorMessage = normaliseError(error, customMessage, analyticsInstance);\n  } catch (err) {\n    logger.error('[handleError] Exception:: ', err);\n    logger.error('[handleError] Original error:: ', JSON.stringify(error));\n    notifyError(err);\n  }\n\n  if (!errorMessage) {\n    return;\n  }\n\n  logger.error(errorMessage);\n  let errorObj = error;\n  if (!(error instanceof Error)) errorObj = new Error(errorMessage);\n  notifyError(errorObj);\n}\n\nexport { notifyError, handleError, normaliseError };\n","// Reserved Keywords for properties/traits\nconst RESERVED_KEYS = [\n  'anonymous_id',\n  'id',\n  'sent_at',\n  'received_at',\n  'timestamp',\n  'original_timestamp',\n  'event_text',\n  'event',\n];\n\nconst CONFIG_URL =\n  'https://api.rudderlabs.com/sourceConfig/?p=__MODULE_TYPE__&v=__PACKAGE_VERSION__';\nconst SDK_CDN_BASE_URL = 'https://cdn.rudderlabs.com';\nconst CDN_ARCH_VERSION_DIR = 'v1.1';\nconst CDN_INT_DIR = 'js-integrations';\nconst DEST_SDK_BASE_URL = `${SDK_CDN_BASE_URL}/${CDN_ARCH_VERSION_DIR}/${CDN_INT_DIR}`;\n\nconst MAX_WAIT_FOR_INTEGRATION_LOAD = 10000;\nconst INTEGRATION_LOAD_CHECK_INTERVAL = 1000;\nconst INTG_SUFFIX = '_RS';\nconst POLYFILL_URL =\n  'https://polyfill.io/v3/polyfill.min.js?features=Array.prototype.find%2CArray.prototype.includes%2CPromise%2CString.prototype.endsWith%2CString.prototype.includes%2CString.prototype.startsWith%2CObject.entries%2CObject.values%2CElement.prototype.dataset%2CString.prototype.replaceAll';\n\nconst GENERIC_TRUE_VALUES = ['true', 'True', 'TRUE', 't', 'T', '1'];\nconst GENERIC_FALSE_VALUES = ['false', 'False', 'FALSE', 'f', 'F', '0'];\n\nconst SAMESITE_COOKIE_OPTS = ['Lax', 'None', 'Strict'];\n\nconst DEFAULT_SESSION_TIMEOUT = 30 * 60 * 1000; // 30 min in milliseconds\nconst MIN_SESSION_TIMEOUT = 10 * 1000; // 10 sec in milliseconds\nconst MIN_SESSION_ID_LENGTH = 10;\n\nconst ERROR_REPORTING_SERVICE_GLOBAL_KEY_NAME = 'errorReporting';\nconst LOAD_ORIGIN = 'RS_JS_SDK';\n\nconst DEFAULT_REGION = 'US';\nconst DEFAULT_DATAPLANE_URL = 'https://hosted.rudderlabs.com';\n\nconst RESIDENCY_SERVERS = [DEFAULT_REGION, 'EU'];\n\nconst SUPPORTED_CONSENT_MANAGERS = ['oneTrust'];\n\nconst SYSTEM_KEYWORDS = ['library', 'consentManagement'];\nconst UA_CH_LEVELS = ['none', 'default', 'full'];\n\nexport {\n  RESERVED_KEYS,\n  CONFIG_URL,\n  SDK_CDN_BASE_URL,\n  CDN_ARCH_VERSION_DIR,\n  CDN_INT_DIR,\n  DEST_SDK_BASE_URL,\n  MAX_WAIT_FOR_INTEGRATION_LOAD,\n  INTEGRATION_LOAD_CHECK_INTERVAL,\n  INTG_SUFFIX,\n  POLYFILL_URL,\n  GENERIC_TRUE_VALUES,\n  GENERIC_FALSE_VALUES,\n  SAMESITE_COOKIE_OPTS,\n  DEFAULT_SESSION_TIMEOUT,\n  MIN_SESSION_TIMEOUT,\n  MIN_SESSION_ID_LENGTH,\n  ERROR_REPORTING_SERVICE_GLOBAL_KEY_NAME,\n  LOAD_ORIGIN,\n  DEFAULT_REGION,\n  DEFAULT_DATAPLANE_URL,\n  RESIDENCY_SERVERS,\n  SUPPORTED_CONSENT_MANAGERS,\n  SYSTEM_KEYWORDS,\n  UA_CH_LEVELS,\n};\n","/* eslint-disable no-use-before-define */\n// import logger from \"../utils/logUtil\";\n\nimport { handleError } from \"./errorHandler\";\n\nconst defaultAsyncState = true;\n\nexport const LOAD_ORIGIN = 'RS_JS_SDK';\n/**\n * Script loader\n * @param {String} id                               Id of the script\n * @param {String} src                              URL of the script\n * @param {Object} options                          Object containing different configuration\n * @param {Boolean} options.async                   Determines script will be loaded asynchronously or not\n * @param {Boolean} options.isNonNativeSDK          Determines whether the script that will be loaded is one of RS's own\n * @param {Boolean} options.skipDatasetAttributes   Determines whether to add or skip dataset attribute\n */\nconst ScriptLoader = (id, src, options = {}) => {\n  try {\n    const exists = document.getElementById(id);\n    if (exists) {\n      // logger.debug(\"script already loaded\");\n      return;\n    }\n\n    const js = document.createElement('script');\n    js.src = src;\n    js.async = options.async === undefined ? defaultAsyncState : options.async;\n    js.type = 'text/javascript';\n    js.id = id;\n    // This checking is in place to skip the dataset attribute for some cases(while loading polyfill)\n    if (options.skipDatasetAttributes !== true) {\n      js.setAttribute('data-loader', LOAD_ORIGIN);\n      if (options.isNonNativeSDK !== undefined) {\n        js.setAttribute('data-isNonNativeSDK', options.isNonNativeSDK);\n      }\n    }\n    const headElmColl = document.getElementsByTagName('head');\n    if (headElmColl.length > 0) {\n      // logger.debug(\"==adding script==\", js);\n      headElmColl[0].insertBefore(js, headElmColl[0].firstChild);\n    } else {\n      const e = document.getElementsByTagName('script')[0];\n      // logger.debug(\"==parent script==\", e);\n      // logger.debug(\"==adding script==\", js);\n      e.parentNode.insertBefore(js, e);\n    }\n  } catch (e) {\n    handleError(e);\n  }\n};\n\nexport default ScriptLoader;\n","const NAME = 'GOOGLE_OPTIMIZE';\nconst CNameMapping = {\n  [NAME]: NAME,\n  'Google Optimize': NAME,\n  GoogleOptimize: NAME,\n  Googleoptimize: NAME,\n  GOOGLEOPTIMIZE: NAME,\n  'google optimize': NAME,\n  'Google optimize': NAME,\n  'GOOGLE OPTIMIZE': NAME,\n};\n\nexport { NAME, CNameMapping };\n","/* eslint-disable class-methods-use-this */\nimport logger from '../../utils/logUtil';\n\nimport ScriptLoader, { LOAD_ORIGIN } from '../../utils/ScriptLoader';\nimport { NAME } from './constants';\n\nclass GoogleOptimize {\n  constructor(config, analytics, destinationInfo) {\n    if (analytics.logLevel) {\n      logger.setLogLevel(analytics.logLevel);\n    }\n    this.name = NAME;\n    this.ga = config.ga;\n    this.trackingId = config.trackingId;\n    this.containerId = config.containerId;\n    this.async = config.async;\n    this.aflicker = config.aflicker;\n    this.areTransformationsConnected = destinationInfo && destinationInfo.areTransformationsConnected;\n    this.destinationId = destinationInfo && destinationInfo.destinationId;\n  }\n\n  init() {\n    logger.debug('===in init Google Optimize===');\n    if (!this.containerId) {\n      return;\n    }\n    // load optimize script first\n    ScriptLoader(\n      'Google Optimize',\n      `https://www.googleoptimize.com/optimize.js?id=${this.containerId}`,\n      { async: this.async },\n    );\n    if (this.ga) {\n      if (!this.trackingId) {\n        return;\n      }\n      ScriptLoader(\n        'Google Tag Manager',\n        `https://www.googletagmanager.com/gtag/js?id=${this.trackingId}`,\n      );\n      window.dataLayer = window.dataLayer || [];\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n      gtag('js', new Date());\n      gtag('config', `${this.trackingId}`);\n    }\n\n    // anti flicker snippet contains insertBefore since it needs to be executed before any other script\n    // link -> https://support.google.com/optimize/answer/7100284?hl=en&ref_topic=6197443\n    if (this.aflicker) {\n      const flick = document.createElement('style');\n      flick.innerHTML = '.async-hide { opacity: 0 !important}';\n      const js = document.createElement('script');\n      js.setAttribute('data-loader', LOAD_ORIGIN);\n      js.innerHTML = `(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};(a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;})(window,document.documentElement,'async-hide','dataLayer',4000,{'${this.containerId}':true});`;\n      const e = document.getElementsByTagName('script')[0];\n      e.parentNode.insertBefore(flick, e); // style tag in anti flicker snippet should be before the a-flicker script as per docs\n      e.parentNode.insertBefore(js, e);\n    }\n  }\n\n  isLoaded() {\n    logger.debug('=== in isLoaded Google Optimize===');\n    return !!window.dataLayer;\n  }\n\n  isReady() {\n    logger.debug('=== in isReady Google Optimize===');\n    return !!window.dataLayer;\n  }\n}\nexport default GoogleOptimize;\n"],"names":["LOG_LEVEL","logger","logLevel","toUpperCase","_console2","console","log","apply","arguments","_console4","error","notifyError","errorReportingClient","window","rudderanalytics","notify","handleError","customMessage","analyticsInstance","errorMessage","Error","message","JSON","stringify","e","Event","target","localName","dataset","loader","isNonNativeSDK","src","id","page","path","title","sendAdblockPageOptions","customErrMessagePrefix","normaliseError","err","errorObj","_CNameMapping","LOAD_ORIGIN","ScriptLoader","options","exists","document","getElementById","js","createElement","async","undefined","type","skipDatasetAttributes","setAttribute","headElmColl","getElementsByTagName","length","insertBefore","firstChild","parentNode","NAME","_defineProperty","GoogleOptimize","config","analytics","destinationInfo","_classCallCheck","this","name","ga","trackingId","containerId","aflicker","areTransformationsConnected","destinationId","concat","gtag","dataLayer","push","Date","flick","innerHTML","key","value"],"mappings":"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"}