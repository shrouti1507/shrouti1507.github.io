{"version":3,"file":"Lemnisk.min.js","sources":["../../../src/utils/logger.js","../../../src/integrations/Lemnisk/constants.js","../../../src/integrations/Lemnisk/browser.js","../../../src/utils/ScriptLoader.js"],"sourcesContent":["const LogLevel = {\n  LOG: {\n    value: 0,\n    method: console.log,\n  },\n  INFO: {\n    value: 1,\n    method: console.info,\n  },\n  DEBUG: {\n    value: 2,\n    method: console.debug,\n  },\n  WARN: {\n    value: 3,\n    method: console.warn,\n  },\n  ERROR: {\n    value: 4,\n    method: console.error,\n  },\n};\n\nclass Logger {\n  constructor(scope, level) {\n    this.level = +level || LogLevel.ERROR.value;\n    this.scope = scope || '';\n  }\n\n  setLogLevel(levelStr) {\n    if (levelStr && typeof levelStr === 'string') {\n      const lvlStr = levelStr.toUpperCase();\n      this.level = LogLevel[lvlStr] ? LogLevel[lvlStr].value : this.level;\n    }\n  }\n\n  setScope(scopeVal) {\n    this.scope = scopeVal || this.scope;\n  }\n\n  log(...args) {\n    this.logBase(args, LogLevel.LOG.value);\n  }\n\n  info(...args) {\n    this.logBase(args, LogLevel.INFO.value);\n  }\n\n  debug(...args) {\n    this.logBase(args, LogLevel.DEBUG.value);\n  }\n\n  warn(...args) {\n    this.logBase(args, LogLevel.WARN.value);\n  }\n\n  error(...args) {\n    this.logBase(args, LogLevel.ERROR.value);\n  }\n\n  logBase(args, logLevel) {\n    if (this.level <= logLevel) {\n      const logVal = Object.values(LogLevel).find((val) => val.value === logLevel);\n      logVal.method(...this.getLogData(args));\n    }\n  }\n\n  /**\n   * Formats the console message using `scope`\n   * @param {*} logArgs\n   * @returns updated log arguments\n   */\n  getLogData(logArgs) {\n    if (Array.isArray(logArgs) && logArgs.length > 0) {\n      // prefix SDK identifier\n      let msg = `%c RS SDK`;\n\n      // format the log message using `scope`\n      if (this.scope) {\n        msg = `${msg} - ${this.scope}`;\n      }\n\n      // trim whitespaces\n      const orgMsg = logArgs[0].trim();\n\n      // prepare the final message\n      msg = `${msg} %c ${orgMsg}`;\n\n      const retArgs = [];\n      retArgs.push(msg);\n\n      // add style for the prefix\n      retArgs.push('font-weight: bold; background: black; color: white;');\n\n      // reset the style for the actual message\n      retArgs.push('font-weight: normal;');\n\n      // append rest of the original arguments\n      retArgs.push(...logArgs.slice(1));\n      return retArgs;\n    }\n    return logArgs;\n  }\n}\n\nexport default Logger;\n","const NAME = 'LEMNISK';\nconst CNameMapping = {\n  [NAME]: NAME,\n  'LEMNISK_MARKETING_AUTOMATION': NAME,\n  'Lemnisk Marketing Automation': NAME,\n  'LemniskMarketingAutomation': NAME,\n  'lemniskmarketingautomation': NAME,\n  'lemniskMarketingAutomation': NAME,\n  'lemnisk': NAME,\n  'Lemnisk': NAME,\n};\n\nexport { NAME, CNameMapping };","/* eslint-disable no-var */\n/* eslint-disable no-param-reassign */\n/* eslint-disable func-names */\n/* eslint-disable class-methods-use-this */\nimport Logger from \"../../utils/logger\";\nimport { LOAD_ORIGIN } from '../../utils/ScriptLoader';\nimport { NAME } from './constants';\n\nconst logger = new Logger(NAME);\nclass Lemnisk{\n    constructor(config, analytics, destinationInfo) {\n        if (analytics.logLevel) {\n            logger.setLogLevel(analytics.logLevel);\n        }\n        this.accountId = config.accountId;\n        this.sdkWriteKey = config.sdkWriteKey;\n        this.name = NAME;\n        this.areTransformationsConnected = destinationInfo && destinationInfo.areTransformationsConnected;\n        this.destinationId = destinationInfo && destinationInfo.destinationId;\n    }\n\n    init() {\n        logger.debug('===in init Lemnisk Marketing Automation===');\n        (function (window, tag, o, a, r) {\n            \n            var methods = [\n                \"init\",\n                \"page\",\n                \"track\",\n                \"identify\"\n            ];\n            window.lmSMTObj = window.lmSMTObj || [];\n            \n            for (var i = 0; i < methods.length; i++) {\n                lmSMTObj[methods[i]] = function (methodName) {\n                    return function () {\n                        lmSMTObj.push([methodName].concat(Array.prototype.slice.call(arguments)));\n                    };\n                }(methods[i]);\n            }\n            // eslint-disable-next-line no-param-reassign\n            a = o.getElementsByTagName('head')[0];\n            // eslint-disable-next-line no-param-reassign\n            r = o.createElement('script');\n            r.setAttribute('data-loader', LOAD_ORIGIN);\n            r.type = \"text/javascript\";\n            r.async = 1;\n            r.src = tag;\n            a.appendChild(r);\n        })(\n            window,\n            document.location.protocol === 'https:' ? `https://cdn25.lemnisk.co/ssp/st/${  this.accountId  }.js` : `http://cdn25.lemnisk.co/ssp/st/${  this.accountId  }.js`,\n            document\n        );\n        window.lmSMTObj.init(this.sdkWriteKey);\n    }\n\n    isLoaded() {\n        logger.debug(\"===In isLoaded Lemnisk Marketing Automation===\");\n        return !!window.lmSMTObj;\n    }\n\n    isReady() {\n        logger.debug('===In isReady Lemnisk Marketing Automation===');\n        return !!window.lmSMTObj;\n    }\n\n    identify(rudderElement) {\n        logger.debug('===In Lemnisk Marketing Automation identify===');\n        const userId = rudderElement.message.userId || rudderElement.message.anonymousId;\n        if (!userId) {\n            logger.debug('[Lemnisk] identify:: user id is required');\n            return;\n        }\n        // disabling eslint as message will be there iinn any case\n        // eslint-disable-next-line no-unsafe-optional-chaining \n        const { traits } = rudderElement.message?.context;\n        if(traits){\n        window.lmSMTObj.identify(rudderElement.message.userId, traits);\n        }\n        else\n        {\n        window.lmSMTObj.identify(rudderElement.message.userId);\n        }\n    }\n\n    track(rudderElement) {\n        logger.debug('===In Lemnisk Marketing Automation track===');\n        const { event, properties } = rudderElement.message;\n\n        if (!event) {\n            logger.error('[Lemnisk] track:: Event name is missing!');\n            return;\n        }\n        if (properties) {\n            window.lmSMTObj.track(event, properties);\n        } else {\n            window.lmSMTObj.track(event);\n        }\n    }\n\n    page(rudderElement) {\n        logger.debug('===In Lemnisk Marketing Automation page===');\n        const { name, properties } = rudderElement.message;\n        if (name && !properties) {\n            window.lmSMTObj.page(name);\n        } else if (!name && properties) {\n            window.lmSMTObj.page(properties);\n        } else if (name && properties) {\n            window.lmSMTObj.page(name, properties);\n        } else {\n            window.lmSMTObj.page();\n        }\n    }\n}\nexport default Lemnisk;","/* eslint-disable no-use-before-define */\n// import logger from \"../utils/logUtil\";\n\nimport { handleError } from \"./errorHandler\";\n\nconst defaultAsyncState = true;\n\nexport const LOAD_ORIGIN = 'RS_JS_SDK';\n/**\n * Script loader\n * @param {String} id                               Id of the script\n * @param {String} src                              URL of the script\n * @param {Object} options                          Object containing different configuration\n * @param {Boolean} options.async                   Determines script will be loaded asynchronously or not\n * @param {Boolean} options.isNonNativeSDK          Determines whether the script that will be loaded is one of RS's own\n * @param {Boolean} options.skipDatasetAttributes   Determines whether to add or skip dataset attribute\n */\nconst ScriptLoader = (id, src, options = {}) => {\n  try {\n    const exists = document.getElementById(id);\n    if (exists) {\n      // logger.debug(\"script already loaded\");\n      return;\n    }\n\n    const js = document.createElement('script');\n    js.src = src;\n    js.async = options.async === undefined ? defaultAsyncState : options.async;\n    js.type = 'text/javascript';\n    js.id = id;\n    // This checking is in place to skip the dataset attribute for some cases(while loading polyfill)\n    if (options.skipDatasetAttributes !== true) {\n      js.setAttribute('data-loader', LOAD_ORIGIN);\n      if (options.isNonNativeSDK !== undefined) {\n        js.setAttribute('data-isNonNativeSDK', options.isNonNativeSDK);\n      }\n    }\n    const headElmColl = document.getElementsByTagName('head');\n    if (headElmColl.length > 0) {\n      // logger.debug(\"==adding script==\", js);\n      headElmColl[0].insertBefore(js, headElmColl[0].firstChild);\n    } else {\n      const e = document.getElementsByTagName('script')[0];\n      // logger.debug(\"==parent script==\", e);\n      // logger.debug(\"==adding script==\", js);\n      e.parentNode.insertBefore(js, e);\n    }\n  } catch (e) {\n    handleError(e);\n  }\n};\n\nexport default ScriptLoader;\n"],"names":["_CNameMapping","LOG","value","method","console","log","INFO","info","DEBUG","debug","WARN","warn","ERROR","error","Logger","scope","level","_classCallCheck","this","LogLevel","_createClass","key","levelStr","lvlStr","toUpperCase","scopeVal","_len","arguments","length","args","_key","logBase","Array","_len2","_key2","_len4","_key4","_len5","_key5","logLevel","logVal","Object","values","find","val","_toConsumableArray","getLogData","logArgs","isArray","msg","concat","orgMsg","trim","retArgs","push","slice","NAME","_defineProperty","logger","Lemnisk","config","analytics","destinationInfo","setLogLevel","accountId","sdkWriteKey","name","areTransformationsConnected","destinationId","window","tag","o","a","r","methods","lmSMTObj","i","methodName","prototype","call","getElementsByTagName","createElement","setAttribute","type","async","src","appendChild","document","location","protocol","init","rudderElement","message","userId","anonymousId","traits","_rudderElement$messag2","context","identify","event","_rudderElement$messag3","properties","track","_rudderElement$messag4","page"],"mappings":"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"}